(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     87842,       1862]
NotebookOptionsPosition[     40923,       1000]
NotebookOutlinePosition[     87242,       1854]
CellTagsIndexPosition[     87199,       1851]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "AceGen`"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"1", " ", "incident", " ", "node"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"2", "--"}], "5", " ", "tet"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.466407815238911*^9, 3.466407821320537*^9}, 
   3.608447731496468*^9, {3.8725363879217*^9, 3.872536401992441*^9}, {
   3.872814318839406*^9, 3.87281433156901*^9}, {3.875623224141383*^9, 
   3.875623229936997*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f10c1fdb-7478-48c6-a90d-bff160ea7957"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nnode", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ntnod", "=", 
   RowBox[{"nnode", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ndi", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ndof", "=", 
   RowBox[{"ntnod", "*", "ndi"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.87510804956026*^9, 3.875108069460496*^9}, 
   3.8756131509067163`*^9, 3.875622995870449*^9, {3.875623213586429*^9, 
   3.8756232211261253`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"66783dac-f7a1-4880-9dc2-72910de6995d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SMSInitialize", "[", 
  RowBox[{"\"\<eikonal3dcoarse\>\"", ",", 
   RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<Fortran90\>\""}], ",", 
   RowBox[{"\"\<Mode\>\"", "\[Rule]", "\"\<Optimal\>\""}], ",", 
   RowBox[{"\"\<VectorLength\>\"", "\[Rule]", "50000"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"SMSModule", "[", 
   RowBox[{"\"\<eikonal3dcoarse\>\"", ",", 
    RowBox[{"Real", "[", 
     RowBox[{
      RowBox[{"x$$", "[", 
       RowBox[{"ntnod", ",", "ndi"}], "]"}], ",", 
      RowBox[{"xo$$", "[", 
       RowBox[{"ntnod", ",", "ndi"}], "]"}], ",", "friction$$", ",", 
      RowBox[{"phi4$$", "[", "nnode", "]"}], ",", "pow$$", ",", "penalty$$", 
      ",", "cl$$", ",", "gold$$", ",", "g$$", ",", 
      RowBox[{"force$$", "[", "ndof", "]"}], ",", 
      RowBox[{"stiffness$$", "[", 
       RowBox[{"ndof", ",", "ndof"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"x$$", ",", 
      RowBox[{"{", 
       RowBox[{"ntnod", ",", "ndi"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xo", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"xo$$", ",", 
      RowBox[{"{", 
       RowBox[{"ntnod", ",", "ndi"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"friction", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", "friction$$", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi4", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"phi4$$", ",", 
      RowBox[{"{", "nnode", "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pow", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", "pow$$", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"penalty", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", "penalty$$", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cl", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", "cl$$", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gold", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", "gold$$", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", "g$$", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"force", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"force$$", ",", 
      RowBox[{"{", "ndof", "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stiffness", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"stiffness$$", ",", 
      RowBox[{"{", 
       RowBox[{"ndof", ",", "ndof"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xc", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "15"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"xc", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"in", "*", "3"}], "-", "3", "+", "id"}], "]"}], "]"}], "=", 
     RowBox[{"x", "[", 
      RowBox[{"[", 
       RowBox[{"in", ",", "id"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"in", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"id", ",", "3"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xco", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "15"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"xco", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"in", "*", "3"}], "-", "3", "+", "id"}], "]"}], "]"}], "=", 
     RowBox[{"xo", "[", 
      RowBox[{"[", 
       RowBox[{"in", ",", "id"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"in", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"id", ",", "3"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var", "\[DoubleRightTee]", "xc"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x11", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x12", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x13", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x21", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x22", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x23", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x31", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x32", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x33", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"3", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x41", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x42", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x43", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"4", ",", "3"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x51", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"5", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x52", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"5", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"x53", "\[DoubleRightTee]", 
   RowBox[{"x", "[", 
    RowBox[{"[", 
     RowBox[{"5", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4261861348125*^9, 3.426186161828125*^9}, {
   3.427542224*^9, 3.4275422243125*^9}, 3.4275453758125*^9, {
   3.42754623571875*^9, 3.42754626359375*^9}, 3.42754785565625*^9, 
   3.427548169671875*^9, {3.42927996009375*^9, 3.429279962296875*^9}, {
   3.438439387125*^9, 3.438439388*^9}, {3.4404361632930803`*^9, 
   3.440436166949026*^9}, {3.445870620584727*^9, 3.445870623790863*^9}, {
   3.446216228289334*^9, 3.446216282742811*^9}, {3.44621631868624*^9, 
   3.44621631885499*^9}, {3.446216351102205*^9, 3.446216351183056*^9}, {
   3.446293786104152*^9, 3.446293792183764*^9}, 3.446475967218207*^9, {
   3.446880843300035*^9, 3.446880844170237*^9}, 3.446890826068512*^9, {
   3.446893822274331*^9, 3.446893824059276*^9}, {3.447498629269288*^9, 
   3.447498632900706*^9}, {3.448042303102645*^9, 3.448042305542992*^9}, {
   3.44809135248275*^9, 3.448091353321991*^9}, {3.44811001211119*^9, 
   3.448110041936853*^9}, {3.448110145266873*^9, 3.448110147053007*^9}, {
   3.44811094662273*^9, 3.448110948517034*^9}, {3.448112278914509*^9, 
   3.448112285473276*^9}, {3.448123744745762*^9, 3.448123753042899*^9}, {
   3.44813502902954*^9, 3.448135030591645*^9}, 3.448139237885815*^9, {
   3.448142207768088*^9, 3.448142212708065*^9}, {3.448146572727599*^9, 
   3.448146580081447*^9}, 3.448147365156846*^9, {3.4481830845304*^9, 
   3.448183087333543*^9}, {3.448297404805592*^9, 3.448297410149173*^9}, {
   3.448299943601687*^9, 3.448299943781274*^9}, {3.448545221410957*^9, 
   3.448545240547647*^9}, {3.448558032541431*^9, 3.448558049429341*^9}, {
   3.448577645025915*^9, 3.44857765766511*^9}, 3.448646244269343*^9, 
   3.448646303633465*^9, 3.448650150323119*^9, 3.448650194397192*^9, {
   3.450986663069806*^9, 3.450986698661041*^9}, {3.450986784898303*^9, 
   3.450986790407636*^9}, {3.45103843644679*^9, 3.451038454318932*^9}, {
   3.451038959733551*^9, 3.451038967300267*^9}, {3.451055116551082*^9, 
   3.45105514580022*^9}, {3.451056853936622*^9, 3.451056898166103*^9}, {
   3.451056930046932*^9, 3.451056960541834*^9}, 3.451057078682105*^9, {
   3.451057636755808*^9, 3.451057737642023*^9}, {3.451057860991008*^9, 
   3.451057866211105*^9}, {3.451058114122273*^9, 3.451058174190255*^9}, {
   3.45105828772525*^9, 3.451058319340709*^9}, {3.45105938792707*^9, 
   3.451059418178435*^9}, {3.451059483159359*^9, 3.451059485981179*^9}, {
   3.451059587072235*^9, 3.45105962136382*^9}, {3.451107615179875*^9, 
   3.451107620457742*^9}, {3.451115408251421*^9, 3.45111541171154*^9}, 
   3.451115750908897*^9, 3.451115818129735*^9, {3.451115980880613*^9, 
   3.451116031212839*^9}, {3.451126950600027*^9, 3.451126980243674*^9}, {
   3.451127037721711*^9, 3.451127053884392*^9}, {3.451127806730613*^9, 
   3.451127822216624*^9}, {3.451128076675198*^9, 3.451128099022692*^9}, {
   3.451128757324267*^9, 3.451128758462233*^9}, {3.451287067579806*^9, 
   3.451287100839201*^9}, {3.451299867003715*^9, 3.451299903089595*^9}, {
   3.451301484362469*^9, 3.451301491688129*^9}, {3.451303265833068*^9, 
   3.451303272679346*^9}, 3.451367044615671*^9, 3.451577192156044*^9, 
   3.451583714178725*^9, 3.451597162697447*^9, 3.451671931392434*^9, {
   3.45173512749507*^9, 3.451735128498657*^9}, {3.451991089529819*^9, 
   3.451991110666354*^9}, {3.451991144046453*^9, 3.45199114587802*^9}, {
   3.451991462846256*^9, 3.451991500362782*^9}, {3.451997916067656*^9, 
   3.451997916972168*^9}, {3.45199890129247*^9, 3.451998915997358*^9}, {
   3.45200670935004*^9, 3.452006715874024*^9}, {3.452012469910067*^9, 
   3.452012490173022*^9}, {3.456834853771174*^9, 3.456834855049622*^9}, {
   3.457254849180555*^9, 3.457254849655453*^9}, {3.457262386447555*^9, 
   3.457262421881778*^9}, {3.45726279128421*^9, 3.457262797305015*^9}, {
   3.457262841759947*^9, 3.457262846067908*^9}, {3.457263404382782*^9, 
   3.457263409199305*^9}, {3.457266457136763*^9, 3.45726646766391*^9}, {
   3.457267035582186*^9, 3.45726704163021*^9}, {3.457270087475956*^9, 
   3.457270103695919*^9}, {3.457270221117715*^9, 3.457270242777457*^9}, {
   3.457270745161356*^9, 3.457270746962593*^9}, 3.457272451595813*^9, {
   3.457272644930151*^9, 3.457272645570836*^9}, {3.457272842194768*^9, 
   3.457272842912609*^9}, {3.457273016027723*^9, 3.457273018103411*^9}, {
   3.457344956229929*^9, 3.457344957044853*^9}, {3.457345279448009*^9, 
   3.457345310101467*^9}, {3.457346557602675*^9, 3.457346558899008*^9}, {
   3.457351598835738*^9, 3.457351603910381*^9}, 3.457352361031333*^9, {
   3.457429905535572*^9, 3.457429906293728*^9}, 3.457769376744449*^9, {
   3.457782697718182*^9, 3.457782698992462*^9}, {3.457782908631504*^9, 
   3.457783004991385*^9}, {3.457783036491727*^9, 3.457783048514168*^9}, {
   3.457791318440554*^9, 3.457791320730181*^9}, {3.459591288632172*^9, 
   3.459591305681431*^9}, {3.459596642591884*^9, 3.459596652561107*^9}, {
   3.459597155683266*^9, 3.459597161835298*^9}, {3.459699400918235*^9, 
   3.45969940483994*^9}, 3.459699653553062*^9, {3.4596999207252*^9, 
   3.459699932561174*^9}, {3.459700591181047*^9, 3.459700592712694*^9}, {
   3.459700794907302*^9, 3.459700796404009*^9}, {3.459700899131591*^9, 
   3.459700902381678*^9}, 3.466151719058118*^9, {3.466152733054849*^9, 
   3.466152735813437*^9}, {3.466153344049096*^9, 3.466153352190165*^9}, 
   3.466153863479047*^9, {3.466153894892956*^9, 3.466153895123059*^9}, {
   3.466154039385586*^9, 3.466154043080144*^9}, {3.466154459896009*^9, 
   3.466154485883275*^9}, {3.466167328783002*^9, 3.466167357320884*^9}, 
   3.466167851581121*^9, {3.466169862212552*^9, 3.466169872033107*^9}, {
   3.466246197443149*^9, 3.466246200364558*^9}, {3.466271718668324*^9, 
   3.466271725427105*^9}, {3.466280497375553*^9, 3.466280506692231*^9}, {
   3.466342108091231*^9, 3.466342109292054*^9}, 3.466593247941474*^9, {
   3.468828705700693*^9, 3.468828725929084*^9}, 3.468828941220716*^9, {
   3.468921462092437*^9, 3.468921470354116*^9}, 3.474976312045309*^9, 
   3.475069861869422*^9, {3.47541925223758*^9, 3.475419324139022*^9}, 
   3.475419988509012*^9, {3.475422495701305*^9, 3.47542249762652*^9}, {
   3.475422937448763*^9, 3.475422937927682*^9}, 3.475422976435597*^9, 
   3.603282668225164*^9, {3.6078447140218687`*^9, 3.6078447186266193`*^9}, {
   3.608443914927297*^9, 3.608443916291141*^9}, {3.608444148203573*^9, 
   3.608444150467551*^9}, {3.608444830671317*^9, 3.608444858823447*^9}, {
   3.608447739770515*^9, 3.608447740547462*^9}, 3.608447997168189*^9, {
   3.608452006153314*^9, 3.608452024501142*^9}, 3.60846593050342*^9, {
   3.738579123239665*^9, 3.738579129986423*^9}, {3.738579209589061*^9, 
   3.73857921183033*^9}, 3.872487736993638*^9, {3.872488622449188*^9, 
   3.872488624868854*^9}, {3.872488660600462*^9, 3.872488666831192*^9}, {
   3.872496308256352*^9, 3.872496346736*^9}, {3.872505156368672*^9, 
   3.872505166875224*^9}, {3.8725055707669163`*^9, 3.872505606486713*^9}, {
   3.872505648035056*^9, 3.8725056524753017`*^9}, {3.872505684850806*^9, 
   3.872505692969759*^9}, {3.8725360205005627`*^9, 3.872536040902186*^9}, {
   3.8725363320694847`*^9, 3.8725363771482162`*^9}, {3.872536595757229*^9, 
   3.872536597327199*^9}, {3.872538509195862*^9, 3.872538512229639*^9}, {
   3.872538778957861*^9, 3.872538781001481*^9}, {3.872586812472205*^9, 
   3.872586812774186*^9}, {3.872589054728408*^9, 3.872589080816875*^9}, {
   3.872589611581827*^9, 3.872589655514401*^9}, {3.872604425765678*^9, 
   3.872604461006082*^9}, {3.872604525061173*^9, 3.87260456548764*^9}, 
   3.872604801929764*^9, {3.8726551846507473`*^9, 3.8726551979841843`*^9}, {
   3.872657045773116*^9, 3.8726570604598007`*^9}, {3.872658372229491*^9, 
   3.872658375738697*^9}, {3.8726585291130733`*^9, 3.872658602957827*^9}, {
   3.8726590519873753`*^9, 3.872659060445551*^9}, {3.872670784584647*^9, 
   3.8726707983832073`*^9}, {3.872783649749505*^9, 3.872783679224183*^9}, {
   3.8727842922743387`*^9, 3.872784293689295*^9}, {3.872856618174768*^9, 
   3.8728566686867847`*^9}, {3.872933773919486*^9, 3.872933801498307*^9}, {
   3.872940716606098*^9, 3.8729407651125097`*^9}, {3.873109333360744*^9, 
   3.8731093653948298`*^9}, {3.873130515814272*^9, 3.873130517207075*^9}, {
   3.873450719020108*^9, 3.873450719285535*^9}, {3.873451202103095*^9, 
   3.8734512054400883`*^9}, {3.875107585712653*^9, 3.875107587020482*^9}, {
   3.875108010803891*^9, 3.8751080372405643`*^9}, {3.87510807405122*^9, 
   3.875108164770379*^9}, {3.8756231809899693`*^9, 3.875623184103855*^9}, 
   3.8756232458714037`*^9, {3.87562397123586*^9, 3.875623984614738*^9}, 
   3.875624095023821*^9, {3.875624692096965*^9, 3.8756246999502277`*^9}, {
   3.8756247590043497`*^9, 3.875624774629277*^9}, {3.875625881924024*^9, 
   3.8756258871422987`*^9}, {3.875625935596621*^9, 3.87562595260476*^9}, 
   3.8756261061239347`*^9, {3.876881304359971*^9, 3.876881321619237*^9}, {
   3.877673463218568*^9, 3.8776734907895117`*^9}, {3.87767353275292*^9, 
   3.877673595193169*^9}, {3.877673664156487*^9, 3.8776736932952414`*^9}, {
   3.877675531359268*^9, 3.8776755427027187`*^9}, {3.878644146276845*^9, 
   3.87864414919798*^9}},ExpressionUUID->"0d62dfc6-7c7f-4d44-bb9a-\
e81affc7bf95"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.875627738395548*^9, 3.875697393988319*^9, 
  3.87601887407286*^9, 3.876044325917061*^9, 3.8767306691765957`*^9, 
  3.876737223251197*^9, 3.87688135202914*^9, 3.876882770089919*^9, 
  3.87702715255079*^9, 3.877674127133277*^9, 3.877675549137178*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"9168a0b0-5314-4bf2-b0ab-f4803e2aaff2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xi1", ",", "xi2", ",", "xi3"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "x11"}], " ", "x23", " ", "x42"}], "+", 
        RowBox[{"x11", " ", "x22", " ", "x43"}], "+", 
        RowBox[{"x23", " ", "x42", " ", "x51"}], "-", 
        RowBox[{"x22", " ", "x43", " ", "x51"}], "+", 
        RowBox[{"x11", " ", "x23", " ", "x52"}], "-", 
        RowBox[{"x23", " ", "x41", " ", "x52"}], "-", 
        RowBox[{"x11", " ", "x43", " ", "x52"}], "+", 
        RowBox[{"x21", " ", "x43", " ", "x52"}], "+", 
        RowBox[{"x13", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x21", " ", "x42"}], "-", 
           RowBox[{"x42", " ", "x51"}], "+", 
           RowBox[{"x22", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x41"}], "+", "x51"}], ")"}]}], "-", 
           RowBox[{"x21", " ", "x52"}], "+", 
           RowBox[{"x41", " ", "x52"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x11"}], " ", "x22"}], "+", 
           RowBox[{"x22", " ", "x41"}], "+", 
           RowBox[{"x11", " ", "x42"}], "-", 
           RowBox[{"x21", " ", "x42"}]}], ")"}], " ", "x53"}], "+", 
        RowBox[{"x12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x23", " ", "x41"}], "-", 
           RowBox[{"x21", " ", "x43"}], "-", 
           RowBox[{"x23", " ", "x51"}], "+", 
           RowBox[{"x43", " ", "x51"}], "+", 
           RowBox[{"x21", " ", "x53"}], "-", 
           RowBox[{"x41", " ", "x53"}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x21", " ", "x33", " ", "x42"}], "-", 
        RowBox[{"x21", " ", "x32", " ", "x43"}], "-", 
        RowBox[{"x33", " ", "x42", " ", "x51"}], "+", 
        RowBox[{"x32", " ", "x43", " ", "x51"}], "-", 
        RowBox[{"x21", " ", "x33", " ", "x52"}], "+", 
        RowBox[{"x33", " ", "x41", " ", "x52"}], "+", 
        RowBox[{"x21", " ", "x43", " ", "x52"}], "-", 
        RowBox[{"x31", " ", "x43", " ", "x52"}], "+", 
        RowBox[{"x23", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x31"}], " ", "x42"}], "+", 
           RowBox[{"x32", " ", 
            RowBox[{"(", 
             RowBox[{"x41", "-", "x51"}], ")"}]}], "+", 
           RowBox[{"x42", " ", "x51"}], "+", 
           RowBox[{"x31", " ", "x52"}], "-", 
           RowBox[{"x41", " ", "x52"}]}], ")"}]}], "+", 
        RowBox[{"x21", " ", "x32", " ", "x53"}], "-", 
        RowBox[{"x32", " ", "x41", " ", "x53"}], "-", 
        RowBox[{"x21", " ", "x42", " ", "x53"}], "+", 
        RowBox[{"x31", " ", "x42", " ", "x53"}], "+", 
        RowBox[{"x22", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x33"}], " ", "x41"}], "+", 
           RowBox[{"x31", " ", "x43"}], "+", 
           RowBox[{"x33", " ", "x51"}], "-", 
           RowBox[{"x43", " ", "x51"}], "-", 
           RowBox[{"x31", " ", "x53"}], "+", 
           RowBox[{"x41", " ", "x53"}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "x11"}], " ", "x23", " ", "x32"}], "+", 
        RowBox[{"x11", " ", "x22", " ", "x33"}], "+", 
        RowBox[{"x23", " ", "x32", " ", "x51"}], "-", 
        RowBox[{"x22", " ", "x33", " ", "x51"}], "+", 
        RowBox[{"x11", " ", "x23", " ", "x52"}], "-", 
        RowBox[{"x23", " ", "x31", " ", "x52"}], "-", 
        RowBox[{"x11", " ", "x33", " ", "x52"}], "+", 
        RowBox[{"x21", " ", "x33", " ", "x52"}], "+", 
        RowBox[{"x13", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x21", " ", "x32"}], "-", 
           RowBox[{"x32", " ", "x51"}], "+", 
           RowBox[{"x22", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x31"}], "+", "x51"}], ")"}]}], "-", 
           RowBox[{"x21", " ", "x52"}], "+", 
           RowBox[{"x31", " ", "x52"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x11"}], " ", "x22"}], "+", 
           RowBox[{"x22", " ", "x31"}], "+", 
           RowBox[{"x11", " ", "x32"}], "-", 
           RowBox[{"x21", " ", "x32"}]}], ")"}], " ", "x53"}], "+", 
        RowBox[{"x12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x23", " ", "x31"}], "-", 
           RowBox[{"x21", " ", "x33"}], "-", 
           RowBox[{"x23", " ", "x51"}], "+", 
           RowBox[{"x33", " ", "x51"}], "+", 
           RowBox[{"x21", " ", "x53"}], "-", 
           RowBox[{"x31", " ", "x53"}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "x21"}], " ", "x33", " ", "x42"}], "+", 
        RowBox[{"x21", " ", "x32", " ", "x43"}], "+", 
        RowBox[{"x33", " ", "x42", " ", "x51"}], "-", 
        RowBox[{"x32", " ", "x43", " ", "x51"}], "+", 
        RowBox[{"x21", " ", "x33", " ", "x52"}], "-", 
        RowBox[{"x33", " ", "x41", " ", "x52"}], "-", 
        RowBox[{"x21", " ", "x43", " ", "x52"}], "+", 
        RowBox[{"x31", " ", "x43", " ", "x52"}], "+", 
        RowBox[{"x23", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x31", " ", "x42"}], "-", 
           RowBox[{"x42", " ", "x51"}], "+", 
           RowBox[{"x32", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x41"}], "+", "x51"}], ")"}]}], "-", 
           RowBox[{"x31", " ", "x52"}], "+", 
           RowBox[{"x41", " ", "x52"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x21"}], " ", "x32"}], "+", 
           RowBox[{"x32", " ", "x41"}], "+", 
           RowBox[{"x21", " ", "x42"}], "-", 
           RowBox[{"x31", " ", "x42"}]}], ")"}], " ", "x53"}], "+", 
        RowBox[{"x22", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x33", " ", "x41"}], "-", 
           RowBox[{"x31", " ", "x43"}], "-", 
           RowBox[{"x33", " ", "x51"}], "+", 
           RowBox[{"x43", " ", "x51"}], "+", 
           RowBox[{"x31", " ", "x53"}], "-", 
           RowBox[{"x41", " ", "x53"}]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "x11"}], " ", "x23", " ", "x32"}], "+", 
        RowBox[{"x11", " ", "x22", " ", "x33"}], "+", 
        RowBox[{"x23", " ", "x32", " ", "x41"}], "-", 
        RowBox[{"x22", " ", "x33", " ", "x41"}], "+", 
        RowBox[{"x11", " ", "x23", " ", "x42"}], "-", 
        RowBox[{"x23", " ", "x31", " ", "x42"}], "-", 
        RowBox[{"x11", " ", "x33", " ", "x42"}], "+", 
        RowBox[{"x21", " ", "x33", " ", "x42"}], "+", 
        RowBox[{"x13", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x21", " ", "x32"}], "-", 
           RowBox[{"x32", " ", "x41"}], "+", 
           RowBox[{"x22", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x31"}], "+", "x41"}], ")"}]}], "-", 
           RowBox[{"x21", " ", "x42"}], "+", 
           RowBox[{"x31", " ", "x42"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x11"}], " ", "x22"}], "+", 
           RowBox[{"x22", " ", "x31"}], "+", 
           RowBox[{"x11", " ", "x32"}], "-", 
           RowBox[{"x21", " ", "x32"}]}], ")"}], " ", "x43"}], "+", 
        RowBox[{"x12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x23", " ", "x31"}], "-", 
           RowBox[{"x21", " ", "x33"}], "-", 
           RowBox[{"x23", " ", "x41"}], "+", 
           RowBox[{"x33", " ", "x41"}], "+", 
           RowBox[{"x21", " ", "x43"}], "-", 
           RowBox[{"x31", " ", "x43"}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x21", " ", "x33", " ", "x42"}], "-", 
        RowBox[{"x21", " ", "x32", " ", "x43"}], "-", 
        RowBox[{"x33", " ", "x42", " ", "x51"}], "+", 
        RowBox[{"x32", " ", "x43", " ", "x51"}], "-", 
        RowBox[{"x21", " ", "x33", " ", "x52"}], "+", 
        RowBox[{"x33", " ", "x41", " ", "x52"}], "+", 
        RowBox[{"x21", " ", "x43", " ", "x52"}], "-", 
        RowBox[{"x31", " ", "x43", " ", "x52"}], "+", 
        RowBox[{"x23", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x31"}], " ", "x42"}], "+", 
           RowBox[{"x32", " ", 
            RowBox[{"(", 
             RowBox[{"x41", "-", "x51"}], ")"}]}], "+", 
           RowBox[{"x42", " ", "x51"}], "+", 
           RowBox[{"x31", " ", "x52"}], "-", 
           RowBox[{"x41", " ", "x52"}]}], ")"}]}], "+", 
        RowBox[{"x21", " ", "x32", " ", "x53"}], "-", 
        RowBox[{"x32", " ", "x41", " ", "x53"}], "-", 
        RowBox[{"x21", " ", "x42", " ", "x53"}], "+", 
        RowBox[{"x31", " ", "x42", " ", "x53"}], "+", 
        RowBox[{"x22", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x33"}], " ", "x41"}], "+", 
           RowBox[{"x31", " ", "x43"}], "+", 
           RowBox[{"x33", " ", "x51"}], "-", 
           RowBox[{"x43", " ", "x51"}], "-", 
           RowBox[{"x31", " ", "x53"}], "+", 
           RowBox[{"x41", " ", "x53"}]}], ")"}]}]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.875623642023741*^9, 3.875623667725264*^9}, 
   3.8756239238654747`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"2c740258-d6e3-49db-8918-82fe9c7b5b14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xi1", "\[DoubleRightTee]", 
   RowBox[{"SMSMax", "[", 
    RowBox[{
     RowBox[{"SMSMin", "[", 
      RowBox[{"1", ",", "xi1"}], "]"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xi2", "\[DoubleRightTee]", 
   RowBox[{"SMSMax", "[", 
    RowBox[{
     RowBox[{"SMSMin", "[", 
      RowBox[{"1", ",", "xi2"}], "]"}], ",", "0"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xi3", "\[DoubleRightTee]", 
   RowBox[{"SMSMax", "[", 
    RowBox[{
     RowBox[{"SMSMin", "[", 
      RowBox[{"1", ",", "xi3"}], "]"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ffr", "\[DoubleRightTee]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", "xi1", "-", "xi2", "-", "xi3"}], ",", "xi1", ",", 
     "xi2", ",", "xi3"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ff", "\[DoubleRightTee]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"ffr", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"ffr", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"ffr", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"ffr", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"du", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"du", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"du", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"ff", "[", 
        RowBox[{"[", "k", "]"}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "i"}], "]"}], "]"}], "-", 
         RowBox[{"xo", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "i"}], "]"}], "]"}]}], ")"}]}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"du", "\[DoubleRightTee]", 
   RowBox[{"du", "/", 
    RowBox[{"SMSSqrt", "[", 
     RowBox[{"1*^-5", "+", 
      RowBox[{"du", ".", "du"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "\[DoubleRightTee]", 
   RowBox[{"phi4", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "\[DoubleRightTee]", 
   RowBox[{"phi4", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "\[DoubleRightTee]", 
   RowBox[{"phi4", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", "\[DoubleRightTee]", 
   RowBox[{"phi4", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gphi3", "=", 
   RowBox[{"-", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "p2"}], " ", "x23", " ", "x42"}], "+", 
       RowBox[{"p1", " ", "x33", " ", "x42"}], "+", 
       RowBox[{"p2", " ", "x22", " ", "x43"}], "-", 
       RowBox[{"p1", " ", "x32", " ", "x43"}], "+", 
       RowBox[{"p4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "x23"}], " ", "x32"}], "+", 
          RowBox[{"x22", " ", "x33"}], "+", 
          RowBox[{"x23", " ", "x42"}], "-", 
          RowBox[{"x33", " ", "x42"}], "-", 
          RowBox[{"x22", " ", "x43"}], "+", 
          RowBox[{"x32", " ", "x43"}]}], ")"}]}], "+", 
       RowBox[{"p2", " ", "x23", " ", "x52"}], "-", 
       RowBox[{"p1", " ", "x33", " ", "x52"}], "+", 
       RowBox[{"p1", " ", "x43", " ", "x52"}], "-", 
       RowBox[{"p2", " ", "x43", " ", "x52"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "p2"}], " ", "x22"}], "+", 
          RowBox[{"p1", " ", "x32"}], "-", 
          RowBox[{"p1", " ", "x42"}], "+", 
          RowBox[{"p2", " ", "x42"}]}], ")"}], " ", "x53"}], "+", 
       RowBox[{"p3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "x22"}], " ", "x33"}], "+", 
          RowBox[{"x23", " ", 
           RowBox[{"(", 
            RowBox[{"x32", "-", "x52"}], ")"}]}], "+", 
          RowBox[{"x33", " ", "x52"}], "+", 
          RowBox[{"x22", " ", "x53"}], "-", 
          RowBox[{"x32", " ", "x53"}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"p2", " ", "x23", " ", "x41"}], "-", 
       RowBox[{"p1", " ", "x33", " ", "x41"}], "-", 
       RowBox[{"p2", " ", "x21", " ", "x43"}], "+", 
       RowBox[{"p1", " ", "x31", " ", "x43"}], "+", 
       RowBox[{"p4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x23", " ", "x31"}], "-", 
          RowBox[{"x21", " ", "x33"}], "-", 
          RowBox[{"x23", " ", "x41"}], "+", 
          RowBox[{"x33", " ", "x41"}], "+", 
          RowBox[{"x21", " ", "x43"}], "-", 
          RowBox[{"x31", " ", "x43"}]}], ")"}]}], "-", 
       RowBox[{"p2", " ", "x23", " ", "x51"}], "+", 
       RowBox[{"p1", " ", "x33", " ", "x51"}], "-", 
       RowBox[{"p1", " ", "x43", " ", "x51"}], "+", 
       RowBox[{"p2", " ", "x43", " ", "x51"}], "+", 
       RowBox[{"p2", " ", "x21", " ", "x53"}], "-", 
       RowBox[{"p1", " ", "x31", " ", "x53"}], "+", 
       RowBox[{"p1", " ", "x41", " ", "x53"}], "-", 
       RowBox[{"p2", " ", "x41", " ", "x53"}], "+", 
       RowBox[{"p3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x21", " ", "x33"}], "-", 
          RowBox[{"x33", " ", "x51"}], "+", 
          RowBox[{"x23", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "x31"}], "+", "x51"}], ")"}]}], "-", 
          RowBox[{"x21", " ", "x53"}], "+", 
          RowBox[{"x31", " ", "x53"}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "p2"}], " ", "x22", " ", "x41"}], "+", 
       RowBox[{"p1", " ", "x32", " ", "x41"}], "+", 
       RowBox[{"p2", " ", "x21", " ", "x42"}], "-", 
       RowBox[{"p1", " ", "x31", " ", "x42"}], "+", 
       RowBox[{"p4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "x22"}], " ", "x31"}], "+", 
          RowBox[{"x21", " ", "x32"}], "+", 
          RowBox[{"x22", " ", "x41"}], "-", 
          RowBox[{"x32", " ", "x41"}], "-", 
          RowBox[{"x21", " ", "x42"}], "+", 
          RowBox[{"x31", " ", "x42"}]}], ")"}]}], "+", 
       RowBox[{"p2", " ", "x22", " ", "x51"}], "-", 
       RowBox[{"p1", " ", "x32", " ", "x51"}], "+", 
       RowBox[{"p1", " ", "x42", " ", "x51"}], "-", 
       RowBox[{"p2", " ", "x42", " ", "x51"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "p2"}], " ", "x21"}], "+", 
          RowBox[{"p1", " ", "x31"}], "-", 
          RowBox[{"p1", " ", "x41"}], "+", 
          RowBox[{"p2", " ", "x41"}]}], ")"}], " ", "x52"}], "+", 
       RowBox[{"p3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "x21"}], " ", "x32"}], "+", 
          RowBox[{"x22", " ", 
           RowBox[{"(", 
            RowBox[{"x31", "-", "x51"}], ")"}]}], "+", 
          RowBox[{"x32", " ", "x51"}], "+", 
          RowBox[{"x21", " ", "x52"}], "-", 
          RowBox[{"x31", " ", "x52"}]}], ")"}]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gphi3", "=", 
   RowBox[{"gphi3", "/", 
    RowBox[{"SMSSqrt", "[", 
     RowBox[{"gphi3", ".", "gphi3"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"direcnode", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "15"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"direcnode", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"k", "*", "3"}], "-", "3", "+", "id"}], "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"ff", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "*", 
      RowBox[{"gphi3", "[", 
       RowBox[{"[", "id", "]"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"id", ",", "3"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tang", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "15"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"tang", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"k", "*", "3"}], "-", "3", "+", "id"}], "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"ff", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "*", 
      RowBox[{"du", "[", 
       RowBox[{"[", "id", "]"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"id", ",", "3"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", "=", 
   RowBox[{"ffr", ".", "phi4"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "\[DoubleRightTee]", 
   RowBox[{"cl", "*", 
    RowBox[{"Log", "[", "phi", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fn", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{"-", "penalty"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "pow"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SMSMin", "[", 
       RowBox[{"0", ",", "g"}], "]"}], "^", "pow"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"force", "\[DoubleRightTee]", 
   RowBox[{"fn", "*", "direcnode"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"force", "\[DoubleRightTee]", 
   RowBox[{"force", "+", 
    RowBox[{"friction", "*", "fn", "*", "tang"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stiffness", "\[DoubleRightTee]", 
   RowBox[{"SMSD", "[", 
    RowBox[{"force", ",", "var"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"g", ",", "g$$"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"force", ",", "force$$"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSExport", "[", 
    RowBox[{"stiffness", ",", "stiffness$$"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"SMSWrite", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.87562392833344*^9, 3.875623940242728*^9}, {
   3.875624518985675*^9, 3.8756245235107727`*^9}, {3.875624670591317*^9, 
   3.875624677744581*^9}, {3.8756249342465754`*^9, 3.8756249345883427`*^9}, {
   3.875624993924015*^9, 3.875624996163452*^9}, {3.875625293750246*^9, 
   3.875625294586293*^9}, 3.875625657050254*^9, {3.875625698962558*^9, 
   3.8756257598048487`*^9}, {3.875625790182722*^9, 3.875625831248259*^9}, 
   3.876018845369924*^9, {3.876730446631295*^9, 3.8767304498598824`*^9}, {
   3.876730651722748*^9, 3.876730660778158*^9}, {3.876737215255187*^9, 
   3.8767372188404703`*^9}, {3.8768813342283792`*^9, 3.87688133678281*^9}, {
   3.876882750238401*^9, 3.876882756828527*^9}, {3.8770271405959387`*^9, 
   3.877027144656769*^9}, {3.877673721732663*^9, 3.877673729059168*^9}, {
   3.8776737972083683`*^9, 3.877673850653593*^9}, {3.877673908265389*^9, 
   3.877673915198251*^9}, {3.87767401579558*^9, 3.877674095536853*^9}, {
   3.87864413027641*^9, 
   3.8786441655445757`*^9}},ExpressionUUID->"57f8784c-46bb-46b1-a60d-\
9089e91ca09a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"File:\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], "\<\"eikonal3dcoarse.f90\"\>", 
     StyleBox["\<\"Size:\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], "33989"},
    {"\<\"Methods\"\>", "\<\"No.Formulae\"\>", "\<\"No.Leafs\"\>", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"eikonal3dcoarse\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], "519", "14214", "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   GridBoxDividers->{"Rows" -> {1, 2}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.875697405879787*^9, 3.8760188860614033`*^9, 
  3.876044337681171*^9, 3.8767306809767237`*^9, 3.8767372361805363`*^9, 
  3.876881365791513*^9, 3.876882784019305*^9, 3.877027166405861*^9, 
  3.8776741589408913`*^9, 3.8776755812991953`*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"eb749cbd-40d3-4d90-abd6-257cf312df2d"]
}, Open  ]]
},
WindowSize->{1718.1, 896.4},
WindowMargins->{{Automatic, 0.900000000000091}, {
  0.8999999999999773, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
Magnification->2.,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"93296235-6f3b-4767-aa0c-4a8675043547"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 617, 14, 144, "Input",ExpressionUUID->"f10c1fdb-7478-48c6-a90d-bff160ea7957"],
Cell[1178, 36, 589, 14, 180, "Input",ExpressionUUID->"66783dac-f7a1-4880-9dc2-72910de6995d"],
Cell[CellGroupData[{
Cell[1792, 54, 15781, 324, 1395, "Input",ExpressionUUID->"0d62dfc6-7c7f-4d44-bb9a-e81affc7bf95"],
Cell[17576, 380, 379, 5, 66, "Output",ExpressionUUID->"9168a0b0-5314-4bf2-b0ab-f4803e2aaff2"]
}, Open  ]],
Cell[17970, 388, 9677, 239, 877, "Input",ExpressionUUID->"2c740258-d6e3-49db-8918-82fe9c7b5b14"],
Cell[CellGroupData[{
Cell[27672, 631, 11583, 322, 1688, "Input",ExpressionUUID->"57f8784c-46bb-46b1-a60d-9089e91ca09a"],
Cell[39258, 955, 1649, 42, 120, "Print",ExpressionUUID->"eb749cbd-40d3-4d90-abd6-257cf312df2d"]
}, Open  ]]
}
]
*)

